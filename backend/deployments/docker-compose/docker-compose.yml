version: '3.8'

services:
  # Infrastructure Services
  postgres:
    image: postgres:16-alpine
    container_name: wc-postgres
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: water_classroom
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init-scripts:/docker-entrypoint-initdb.d
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5
    networks:
      - wc-network

  redis:
    image: redis:7-alpine
    container_name: wc-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 5s
      retries: 5
    networks:
      - wc-network

  rabbitmq:
    image: rabbitmq:3-management-alpine
    container_name: wc-rabbitmq
    ports:
      - "5672:5672"   # AMQP port
      - "15672:15672" # Management UI
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq
    environment:
      RABBITMQ_DEFAULT_USER: guest
      RABBITMQ_DEFAULT_PASS: guest
    healthcheck:
      test: ["CMD", "rabbitmq-diagnostics", "check_port_connectivity"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - wc-network

  # Vector database for AI RAG system
  weaviate:
    image: semitechnologies/weaviate:1.21
    container_name: wc-weaviate
    ports:
      - "8087:8080"
    environment:
      QUERY_DEFAULTS_LIMIT: 25
      AUTHENTICATION_ANONYMOUS_ACCESS_ENABLED: "true"
      PERSISTENCE_DATA_PATH: "/var/lib/weaviate"
      DEFAULT_VECTORIZER_MODULE: "none"
      ENABLE_MODULES: ""
    volumes:
      - weaviate_data:/var/lib/weaviate
    networks:
      - wc-network

  # Observability
  jaeger:
    image: jaegertracing/all-in-one:1.49
    container_name: wc-jaeger
    ports:
      - "16686:16686"  # UI
      - "4317:4317"    # OTLP gRPC
      - "4318:4318"    # OTLP HTTP
    environment:
      COLLECTOR_OTLP_ENABLED: "true"
    networks:
      - wc-network

  # Backend Microservices
  api-gateway:
    build:
      context: ../../api-gateway
      dockerfile: Dockerfile.dev
    container_name: wc-api-gateway
    ports:
      - "8081:8080"
    environment:
      ENV: development
      SERVER_PORT: 8080
      LOG_LEVEL: debug
      AUTH_SERVICE_ADDR: auth-svc:50051
      USER_SERVICE_ADDR: user-svc:50052
      CURRICULUM_SERVICE_ADDR: curriculum-svc:50053
      PROGRESS_SERVICE_ADDR: progress-svc:50054
      ASSESSMENT_SERVICE_ADDR: assessment-svc:50055
      TUTOR_SERVICE_ADDR: tutor-orchestrator-svc:50056
      NOTIFICATION_SERVICE_ADDR: notification-svc:50057
      CORS_ALLOWED_ORIGINS: http://localhost:5173,http://localhost:3000
      OTEL_EXPORTER_OTLP_ENDPOINT: http://jaeger:4317
      OTEL_SERVICE_NAME: api-gateway
    volumes:
      - ../../backend/api-gateway:/app
    depends_on:
      - auth-svc
      - user-svc
      - curriculum-svc
      - progress-svc
      - assessment-svc
      - tutor-orchestrator-svc
      - notification-svc
    networks:
      - wc-network

  auth-svc:
    build:
      context: ../../auth-svc
      dockerfile: Dockerfile.dev
    container_name: wc-auth-svc
    ports:
      - "8080:8080"
      - "50051:50051"
    environment:
      ENV: development
      SERVER_PORT: 8080
      GRPC_PORT: 50051
      LOG_LEVEL: debug
      POSTGRES_URI: postgres://postgres:postgres@postgres:5432/water_classroom?sslmode=disable
      REDIS_ADDR: redis:6379
      RABBITMQ_URI: amqp://guest:guest@rabbitmq:5672/
      JWT_PRIVATE_KEY: ${JWT_PRIVATE_KEY:-}
      JWT_PUBLIC_KEY: ${JWT_PUBLIC_KEY:-}
      OTEL_EXPORTER_OTLP_ENDPOINT: http://jaeger:4317
      OTEL_SERVICE_NAME: auth-service
      DISABLE_AUTH: "true" # For development only
    volumes:
      - ../../backend/auth-svc:/app
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy
    networks:
      - wc-network

  user-svc:
    build:
      context: ../../user-svc
      dockerfile: Dockerfile.dev
    container_name: wc-user-svc
    ports:
      - "50052:50052"
    environment:
      ENV: development
      GRPC_PORT: 50052
      LOG_LEVEL: debug
      POSTGRES_URI: postgres://postgres:postgres@postgres:5432/water_classroom?sslmode=disable
      REDIS_ADDR: redis:6379
      RABBITMQ_URI: amqp://guest:guest@rabbitmq:5672/
      JWT_PUBLIC_KEY: ${JWT_PUBLIC_KEY:-}
      OTEL_EXPORTER_OTLP_ENDPOINT: http://jaeger:4317
      OTEL_SERVICE_NAME: user-service
    volumes:
      - ../../backend/user-svc:/app
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - wc-network

  curriculum-svc:
    build:
      context: ../../curriculum-svc
      dockerfile: Dockerfile.dev
    container_name: wc-curriculum-svc
    ports:
      - "8082:8082"
      - "50053:50053"
    environment:
      ENV: development
      SERVER_PORT: 8082
      GRPC_PORT: 50053
      LOG_LEVEL: debug
      POSTGRES_URI: postgres://postgres:postgres@postgres:5432/water_classroom?sslmode=disable
      REDIS_ADDR: redis:6379
      JWT_PUBLIC_KEY: ${JWT_PUBLIC_KEY:-}
      WEAVIATE_URL: http://weaviate:8080
      GEMINI_API_KEY: ${GEMINI_API_KEY:-}
      OTEL_EXPORTER_OTLP_ENDPOINT: http://jaeger:4317
      OTEL_SERVICE_NAME: curriculum-service
    volumes:
      - ../../backend/curriculum-svc:/app
    depends_on:
      postgres:
        condition: service_healthy
      weaviate:
        condition: service_started
    networks:
      - wc-network

  progress-svc:
    build:
      context: ../../progress-svc
      dockerfile: Dockerfile.dev
    container_name: wc-progress-svc
    ports:
      - "50054:50054"
    environment:
      ENV: development
      GRPC_PORT: 50054
      LOG_LEVEL: debug
      POSTGRES_URI: postgres://postgres:postgres@postgres:5432/water_classroom?sslmode=disable
      REDIS_ADDR: redis:6379
      JWT_PUBLIC_KEY: ${JWT_PUBLIC_KEY:-}
      OTEL_EXPORTER_OTLP_ENDPOINT: http://jaeger:4317
      OTEL_SERVICE_NAME: progress-service
    volumes:
      - ../../backend/progress-svc:/app
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - wc-network

  assessment-svc:
    build:
      context: ../../assessment-svc
      dockerfile: Dockerfile.dev
    container_name: wc-assessment-svc
    ports:
      - "8084:8084"
      - "50055:50055"
    environment:
      ENV: development
      SERVER_PORT: 8084
      GRPC_PORT: 50055
      LOG_LEVEL: debug
      POSTGRES_URI: postgres://postgres:postgres@postgres:5432/water_classroom?sslmode=disable
      REDIS_ADDR: redis:6379
      JWT_PUBLIC_KEY: ${JWT_PUBLIC_KEY:-}
      GEMINI_API_KEY: ${GEMINI_API_KEY:-}
      OTEL_EXPORTER_OTLP_ENDPOINT: http://jaeger:4317
      OTEL_SERVICE_NAME: assessment-service
    volumes:
      - ../../backend/assessment-svc:/app
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - wc-network

  tutor-orchestrator-svc:
    build:
      context: ../../tutor-orchestrator-svc
      dockerfile: Dockerfile.dev
    container_name: wc-tutor-orchestrator-svc
    ports:
      - "8085:8085"
      - "50056:50056"
    environment:
      ENV: development
      SERVER_PORT: 8085
      GRPC_PORT: 50056
      LOG_LEVEL: debug
      POSTGRES_URI: postgres://postgres:postgres@postgres:5432/water_classroom?sslmode=disable
      REDIS_ADDR: redis:6379
      JWT_PUBLIC_KEY: ${JWT_PUBLIC_KEY:-}
      GEMINI_API_KEY: ${GEMINI_API_KEY:-}
      WEAVIATE_URL: http://weaviate:8080
      OTEL_EXPORTER_OTLP_ENDPOINT: http://jaeger:4317
      OTEL_SERVICE_NAME: tutor-orchestrator-service
    volumes:
      - ../../backend/tutor-orchestrator-svc:/app
    depends_on:
      postgres:
        condition: service_healthy
      weaviate:
        condition: service_started
    networks:
      - wc-network

  notification-svc:
    build:
      context: ../../notification-svc
      dockerfile: Dockerfile.dev
    container_name: wc-notification-svc
    ports:
      - "50057:50057"
    environment:
      ENV: development
      GRPC_PORT: 50057
      LOG_LEVEL: debug
      POSTGRES_URI: postgres://postgres:postgres@postgres:5432/water_classroom?sslmode=disable
      RABBITMQ_URI: amqp://guest:guest@rabbitmq:5672/
      JWT_PUBLIC_KEY: ${JWT_PUBLIC_KEY:-}
      SMTP_HOST: ${SMTP_HOST:-mailhog}
      SMTP_PORT: ${SMTP_PORT:-1025}
      SMTP_USERNAME: ${SMTP_USERNAME:-}
      SMTP_PASSWORD: ${SMTP_PASSWORD:-}
      SMTP_FROM: ${SMTP_FROM:-noreply@waterclassroom.example.com}
      OTEL_EXPORTER_OTLP_ENDPOINT: http://jaeger:4317
      OTEL_SERVICE_NAME: notification-service
    volumes:
      - ../../backend/notification-svc:/app
    depends_on:
      rabbitmq:
        condition: service_healthy
    networks:
      - wc-network

  # For email testing
  mailhog:
    image: mailhog/mailhog
    container_name: wc-mailhog
    ports:
      - "1025:1025"  # SMTP port
      - "8025:8025"  # Web UI
    networks:
      - wc-network

volumes:
  postgres_data:
  redis_data:
  rabbitmq_data:
  weaviate_data:

networks:
  wc-network:
    driver: bridge
